# 1. –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å DB-API 2.0 –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–±–∏–±–ª–∏–æ—Ç–µ–∫—É sqlite3)
import sqlite3

conn = sqlite3.connect('MyDB.db') # –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite

cursor = conn.cursor() # –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–æ—Ä–∞

cursor.execute("""CREATE TABLE IF NOT EXISTS users(
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT,
                age INTEGER,
                surname TEXT,
                faculty TEXT,
                city TEXT
                )""") # –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:

conn.close() # –ó–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö


def add_tables_on_db(x):
    conn = sqlite3.connect('MyDB.db')
    cursor = conn.cursor()

# –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É users
    cursor.execute(f"""ALTER TABLE users ADD COLUMN {x} TEXT""")
    print(f'add tables {x}')
# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π
    conn.commit()
    conn.close()


def show_tables_name():
# —Å–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –Ω–∞—à–µ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('MyDB.db')
    cursor = conn.cursor()

# –ø–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
#     cursor.execute("PRAGMA table_info(users)")
    cursor.execute("SELECT * FROM users")

# –≤—ã–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π —Ç–∞–±–ª–∏—Ü—ã
    rows = cursor.fetchall()
    for row in rows:
        print(row)

    conn.close() # –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö


def adding_records_to_the_database(name, age, surname, faculty, city):
    '''–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –ë–î'''
    conn = sqlite3.connect('MyDB.db')    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    cursor = conn.cursor()               # —Å–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

    cursor.execute(f'INSERT INTO users (name, age, surname, faculty, city) VALUES (?,?,?,?,?)', (name, age, surname, faculty, city))
    print('Success!')
    conn.commit()
    conn.close()


def update_user_interactive():
    conn = sqlite3.connect('MyDB.db')
    cursor = conn.cursor()

    user_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å: ")

    # –ü–æ–ª—É—á–∏–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)
    cursor.execute("SELECT * FROM users WHERE id = ?", (user_id,))
    user = cursor.fetchone()

    if not user:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        conn.close()
        return

    print(f"\nüîç –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user}\n")

    # –ü—Ä–µ–¥–ª–æ–∂–∏–º –≤—ã–±–æ—Ä –ø–æ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    fields = ["name", "age", "surname", "faculty", "city"]
    print("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
    for i, field in enumerate(fields, start=1):
        print(f"{i}. {field}")

    choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—è (1-5): "))
    if choice < 1 or choice > len(fields):
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")
        conn.close()
        return

    field_to_update = fields[choice - 1]
    new_value = input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—è '{field_to_update}': ")

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç
    if field_to_update == "age":
        try:
            new_value = int(new_value)
        except ValueError:
            print("‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
            conn.close()
            return

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ
    cursor.execute(f"UPDATE users SET {field_to_update} = ? WHERE id = ?", (new_value, user_id))
    conn.commit()
    conn.close()

    print(f"‚úÖ –ü–æ–ª–µ '{field_to_update}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID = {user_id}.")


def main():
    print('–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏—Ç–µ 1\n–î–ª—è –∑–∞–ø–∏—Å–∞ –≤ –ë–î –Ω–∞–∂–º–∏—Ç–µ 2\n–î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î –Ω–∞–∂–º–∏—Ç–µ 3')
    x = int(input('1-2: '))
    if x == 2:
        adding_records_to_the_database(name=input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è: '),
                                       age=int(input('–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç: ')),
                                       surname=input('–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é: '),
                                       faculty=input('faculty: '),
                                       city=input('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥: '))
    elif x == 1:
        show_tables_name()
    elif x == 3:
        update_user_interactive()


if __name__ == "__main__":
    main()


